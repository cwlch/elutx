<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="elu.dao.UserMapper">
	<resultMap id="BaseResultMap" type="elu.model.User">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="uid" property="uid" jdbcType="VARCHAR" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_pwd" property="userPwd" jdbcType="VARCHAR" />
		<result column="phone" property="phone" jdbcType="VARCHAR" />
		<result column="birth" property="birth" jdbcType="BIGINT" />
		<result column="gender" property="gender" jdbcType="INTEGER" />
		<result column="home" property="home" jdbcType="VARCHAR" />
		<result column="home_str" property="homeStr" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="BIGINT" />
		<result column="is_stop" property="isStop" jdbcType="INTEGER" />
		<result column="photoUrl" property="photoUrl" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, uid, user_name, user_pwd, phone, birth, gender, home, home_str,photoUrl,
		create_time,
		is_stop
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from user
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="elu.model.User">
		insert into user (id, uid, user_name,
		user_pwd, phone, birth,
		gender, home, home_str,
		create_time, is_stop,photoUrl)
		values (#{id,jdbcType=INTEGER}, #{uid,jdbcType=VARCHAR},
		#{userName,jdbcType=VARCHAR},
		#{userPwd,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{birth,jdbcType=BIGINT},
		#{gender,jdbcType=INTEGER}, #{home,jdbcType=VARCHAR},
		#{homeStr,jdbcType=VARCHAR},
		#{createTime,jdbcType=BIGINT}, #{isStop,jdbcType=INTEGER},#{photoUrl,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="elu.model.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="uid != null">
				uid,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="userPwd != null">
				user_pwd,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="birth != null">
				birth,
			</if>
			<if test="gender != null">
				gender,
			</if>
			<if test="home != null">
				home,
			</if>
			<if test="homeStr != null">
				home_str,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="isStop != null">
				is_stop,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="uid != null">
				#{uid,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="userPwd != null">
				#{userPwd,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="birth != null">
				#{birth,jdbcType=BIGINT},
			</if>
			<if test="gender != null">
				#{gender,jdbcType=INTEGER},
			</if>
			<if test="home != null">
				#{home,jdbcType=VARCHAR},
			</if>
			<if test="homeStr != null">
				#{homeStr,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=BIGINT},
			</if>
			<if test="isStop != null">
				#{isStop,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="elu.model.User">
		update user
		<set>
			<if test="uid != null">
				uid = #{uid,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="userPwd != null">
				user_pwd = #{userPwd,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="birth != null">
				birth = #{birth,jdbcType=BIGINT},
			</if>
			<if test="gender != null">
				gender = #{gender,jdbcType=INTEGER},
			</if>
			<if test="home != null">
				home = #{home,jdbcType=VARCHAR},
			</if>
			<if test="homeStr != null">
				home_str = #{homeStr,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=BIGINT},
			</if>
			<if test="isStop != null">
				is_stop = #{isStop,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="elu.model.User">
		update user
		set uid = #{uid,jdbcType=VARCHAR},
		user_name = #{userName,jdbcType=VARCHAR},
		user_pwd = #{userPwd,jdbcType=VARCHAR},
		phone = #{phone,jdbcType=VARCHAR},
		birth = #{birth,jdbcType=BIGINT},
		gender = #{gender,jdbcType=INTEGER},
		home = #{home,jdbcType=VARCHAR},
		home_str = #{homeStr,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=BIGINT},
		is_stop = #{isStop,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectByUid" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from user
		where uid = #{uid,jdbcType=VARCHAR}
	</select>
	<select id="selectByValue" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from user
		where 1=1
		<if test="uid != null" >
			and uid = #{uid,jdbcType=VARCHAR}
		</if>
		<if test="phone != null" >
			and phone = #{phone,jdbcType=VARCHAR}
		</if>
	</select>
	<select id="selectByPhone" resultMap="BaseResultMap"
			parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from user
		where phone = #{phone,jdbcType=VARCHAR}
	</select>
	
		
</mapper>
