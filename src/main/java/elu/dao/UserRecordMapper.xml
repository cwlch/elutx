<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="elu.dao.UserRecordMapper" >
  <resultMap id="BaseResultMap" type="elu.model.UserRecord" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="u_start" property="uStart" jdbcType="VARCHAR" />
    <result column="u_start_str" property="uStartStr" jdbcType="VARCHAR" />
    <result column="u_end" property="uEnd" jdbcType="VARCHAR" />
    <result column="u_end_str" property="uEndStr" jdbcType="VARCHAR" />
    <result column="u_count" property="uCount" jdbcType="INTEGER" />
    <result column="u_date" property="uDate" jdbcType="BIGINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="u_status" property="uStatus" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, u_start, u_start_str, u_end, u_end_str, u_count, u_date, remark, u_status, 
    create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="elu.model.UserRecord" >
    insert into user_record (id, user_id, u_start, 
      u_start_str, u_end, u_end_str, 
      u_count, u_date, remark, 
      u_status, create_time)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{uStart,jdbcType=VARCHAR}, 
      #{uStartStr,jdbcType=VARCHAR}, #{uEnd,jdbcType=VARCHAR}, #{uEndStr,jdbcType=VARCHAR}, 
      #{uCount,jdbcType=INTEGER}, #{uDate,jdbcType=BIGINT}, #{remark,jdbcType=VARCHAR}, 
      #{uStatus,jdbcType=INTEGER}, #{createTime,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="elu.model.UserRecord" >
    insert into user_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="uStart != null" >
        u_start,
      </if>
      <if test="uStartStr != null" >
        u_start_str,
      </if>
      <if test="uEnd != null" >
        u_end,
      </if>
      <if test="uEndStr != null" >
        u_end_str,
      </if>
      <if test="uCount != null" >
        u_count,
      </if>
      <if test="uDate != null" >
        u_date,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="uStatus != null" >
        u_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="uStart != null" >
        #{uStart,jdbcType=VARCHAR},
      </if>
      <if test="uStartStr != null" >
        #{uStartStr,jdbcType=VARCHAR},
      </if>
      <if test="uEnd != null" >
        #{uEnd,jdbcType=VARCHAR},
      </if>
      <if test="uEndStr != null" >
        #{uEndStr,jdbcType=VARCHAR},
      </if>
      <if test="uCount != null" >
        #{uCount,jdbcType=INTEGER},
      </if>
      <if test="uDate != null" >
        #{uDate,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="uStatus != null" >
        #{uStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="elu.model.UserRecord" >
    update user_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="uStart != null" >
        u_start = #{uStart,jdbcType=VARCHAR},
      </if>
      <if test="uStartStr != null" >
        u_start_str = #{uStartStr,jdbcType=VARCHAR},
      </if>
      <if test="uEnd != null" >
        u_end = #{uEnd,jdbcType=VARCHAR},
      </if>
      <if test="uEndStr != null" >
        u_end_str = #{uEndStr,jdbcType=VARCHAR},
      </if>
      <if test="uCount != null" >
        u_count = #{uCount,jdbcType=INTEGER},
      </if>
      <if test="uDate != null" >
        u_date = #{uDate,jdbcType=BIGINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="uStatus != null" >
        u_status = #{uStatus,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="elu.model.UserRecord" >
    update user_record
    set user_id = #{userId,jdbcType=INTEGER},
      u_start = #{uStart,jdbcType=VARCHAR},
      u_start_str = #{uStartStr,jdbcType=VARCHAR},
      u_end = #{uEnd,jdbcType=VARCHAR},
      u_end_str = #{uEndStr,jdbcType=VARCHAR},
      u_count = #{uCount,jdbcType=INTEGER},
      u_date = #{uDate,jdbcType=BIGINT},
      remark = #{remark,jdbcType=VARCHAR},
      u_status = #{uStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=BIGINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByValue" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_record
    where 1=1
    <if test="userId != null" >
       and user_id = #{userId,jdbcType=INTEGER}
      </if>
      <if test="uStart != null" >
       and u_start like CONCAT(#{uStart},'%')
      </if>
      <if test="uEnd != null" >
       and  u_end like  CONCAT(#{uEnd},'%') 
      </if>
      <if test="uCount != null" >
       and u_count = #{uCount,jdbcType=INTEGER}
      </if>
      <if test="startTime != null" >
       and u_date &gt;= #{startTime,jdbcType=BIGINT}
      </if>
      <if test="endTime != null" >
       and u_date &lt;= #{endTime,jdbcType=BIGINT}
      </if>
      <if test="remark != null" >
       and remark = #{remark,jdbcType=VARCHAR}
      </if>
      <if test="uStatus != null" >
       and u_status = #{uStatus,jdbcType=INTEGER}
      </if>
      <if test="createTime != null" >
       and create_time = #{createTime,jdbcType=BIGINT}
      </if>
      
      
      
      order by create_time desc limit #{page,jdbcType=INTEGER},#{per,jdbcType=INTEGER}
    
  </select>
  
 <select id="queryUserRecordMatchList" resultType="elu.model.UserRecord">
  		select * from user_record t where  t.u_start like  CONCAT(#{d_start},'%')  and t.u_end like  CONCAT(#{d_end},'%') 
		and str_to_date(from_unixtime(t.u_date),'%Y-%m-%d')  = str_to_date(from_unixtime(#{runtime}),'%Y-%m-%d') 
  </select>
  
</mapper>